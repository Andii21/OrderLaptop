// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderLaptop.Data;
using OrderLaptop.DeviceModel.Models;
using OrderLaptop.DeviceModel.Data;

namespace OrderLaptop.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("OrderLaptop.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("OrderLaptop.Models.Laptop", b =>
                {
                    b.Property<int>("LaptopID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("LaptopID");

                    b.ToTable("Laptop");
                });

            modelBuilder.Entity("OrderLaptop.Models.LaptopSite", b =>
                {
                    b.Property<int>("LaptopID")
                        .HasColumnType("int");

                    b.Property<int>("SiteID")
                        .HasColumnType("int");

                    b.HasKey("LaptopID", "SiteID");

                    b.HasIndex("SiteID");

                    b.ToTable("LaptopSite");
                });

            modelBuilder.Entity("OrderLaptop.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<int>("LaptopID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("LaptopID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OrderLaptop.Models.Site", b =>
                {
                    b.Property<int>("SiteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("URL")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SiteID");

                    b.ToTable("Site");
                });

            modelBuilder.Entity("OrderLaptop.Models.LaptopSite", b =>
                {
                    b.HasOne("OrderLaptop.Models.Laptop", "laptop")
                        .WithMany("LaptopSites")
                        .HasForeignKey("LaptopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderLaptop.Models.Site", "site")
                        .WithMany("LaptopSites")
                        .HasForeignKey("SiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("laptop");

                    b.Navigation("site");
                });

            modelBuilder.Entity("OrderLaptop.Models.Order", b =>
                {
                    b.HasOne("OrderLaptop.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrderLaptop.Models.Laptop", "Laptop")
                        .WithMany("Orders")
                        .HasForeignKey("LaptopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Laptop");
                });

            modelBuilder.Entity("OrderLaptop.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderLaptop.Models.Laptop", b =>
                {
                    b.Navigation("LaptopSites");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("OrderLaptop.Models.Site", b =>
                {
                    b.Navigation("LaptopSites");
                });
#pragma warning restore 612, 618
        }
    }
}
